{"ast":null,"code":"var _jsxFileName = \"/home/fernanda/Documents/projects/us-civics-test-prep/src/components/Quiz.js\";\nimport React, { Component } from 'react';\nimport qBank from './quizData';\n\nclass Quiz extends Component {\n  constructor() {\n    super();\n\n    this.loadQuiz = () => {\n      this.setState(() => {\n        return {\n          questions: qBank[this.state.currentQuestion].question,\n          options: qBank[this.state.currentQuestion].options,\n          answers: qBank[this.state.currentQuestion].answer\n        };\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n      console.log(this.state.currentQuestion);\n    };\n\n    this.checkAnswer = userAnswer => {\n      this.setState({\n        answer: userAnswer\n      });\n    };\n\n    this.state = {\n      answer: '',\n      currentQuestion: 0,\n      options: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.checkAnswer = this.checkAnswer.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadQuiz();\n  }\n\n  // updates component\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentQuestion !== prevState.currentQuestion) {\n      this.setState(() => {\n        return {\n          questions: qBank[this.state.currentQuestion].question,\n          options: qBank[this.state.currentQuestion].options,\n          answers: qBank[this.state.currentQuestion].answer\n        };\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          questions = _this$state.questions,\n          options = _this$state.options,\n          answer = _this$state.answer,\n          currentQuestion = _this$state.currentQuestion;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, questions), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Questions \".concat(currentQuestion, \" out of \").concat(qBank.length - 1)), options.map(option => React.createElement(\"p\", {\n      key: option.id,\n      onClick: () => this.checkAnswer(option),\n      className: \"ui floating message options \".concat(answer === option ? \"selected\" : null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, option)), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/fernanda/Documents/projects/us-civics-test-prep/src/components/Quiz.js"],"names":["React","Component","qBank","Quiz","constructor","loadQuiz","setState","questions","state","currentQuestion","question","options","answers","answer","handleClick","console","log","checkAnswer","userAnswer","bind","componentDidMount","componentDidUpdate","prevProps","prevState","render","length","map","option","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport qBank from './quizData'\n\nclass Quiz extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tanswer: '',\n\t\t\tcurrentQuestion: 0,\n\t\t\toptions: []\n\t\t}\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.checkAnswer = this.checkAnswer.bind(this);\n\n\t}\n\n\tloadQuiz = () => {\n\t\tthis.setState(() => {\n\t\t\treturn {\n\t\t\t\tquestions: qBank[this.state.currentQuestion].question,\n\t\t\t\toptions: qBank[this.state.currentQuestion].options,\n\t\t\t\tanswers: qBank[this.state.currentQuestion].answer\n\t\t\t}\n\t\t})\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadQuiz()\n\t}\n\n\thandleClick = () => {\n\t\tthis.setState({\n\t\t\tcurrentQuestion: this.state.currentQuestion + 1\n\t\t})\n\n\t\tconsole.log(this.state.currentQuestion)\n\t}\n\n\t// updates component\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.currentQuestion !== prevState.currentQuestion) {\n\t\t\tthis.setState(() => {\n\t\t\t\treturn {\n\t\t\t\t\tquestions: qBank[this.state.currentQuestion].question,\n\t\t\t\t\toptions: qBank[this.state.currentQuestion].options,\n\t\t\t\t\tanswers: qBank[this.state.currentQuestion].answer\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tcheckAnswer = userAnswer => {\n\t\tthis.setState({\n\t\t\tanswer: userAnswer\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { questions, options, answer, currentQuestion } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h2>{questions}</h2>\n\t\t\t\t<span>{`Questions ${currentQuestion} out of ${qBank.length - 1}`}</span>\n\t\t\t\t{options.map(option => (\n\t\t\t\t\t<p key={option.id} onClick={() => this.checkAnswer(option)} className={`ui floating message options ${answer === option ? \"selected\" : null}`}>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</p>\n\t\t\t\t))}\n\t\t\t\t<button onClick={this.handleClick}>Next</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}